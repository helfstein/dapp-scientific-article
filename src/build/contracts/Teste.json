{
  "contractName": "Teste",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_oarAddress",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    }
  ],
  "bytecode": "0x6080604052604051602080610c9783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100c660017f01000000000000000000000000000000000000000000000000000000000000000260107f010000000000000000000000000000000000000000000000000000000000000002176100cc640100000000026401000000009004565b50610a8f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061014a575060006101486000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610471640100000000026401000000009004565b145b1561016a57610168600061047c640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b505050506040513d602081101561021957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610381576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561030557600080fd5b505af1158015610319573d6000803e3d6000fd5b505050506040513d602081101561032f57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b15801561045657600080fd5b505af115801561046a573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b600061049561049c640100000000026401000000009004565b9050919050565b6000806104cb731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610471640100000000026401000000009004565b111561057b57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105726040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506109d0640100000000026401000000009004565b600190506109cd565b60006105a973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610471640100000000026401000000009004565b11156106595773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106506040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506109d0640100000000026401000000009004565b600190506109cd565b600061068773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610471640100000000026401000000009004565b11156107375773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061072e6040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506109d0640100000000026401000000009004565b600190506109cd565b600061076573146500cfd35b22e4a392fe0adc06de1a1368ed48610471640100000000026401000000009004565b11156108155773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061080c6040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506109d0640100000000026401000000009004565b600190506109cd565b6000610843736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610471640100000000026401000000009004565b11156108a657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506109cd565b60006108d47320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610471640100000000026401000000009004565b1115610937577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506109cd565b60006109657351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610471640100000000026401000000009004565b11156109c8577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506109cd565b600090505b90565b80600290805190602001906109e69291906109ea565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a2b57805160ff1916838001178555610a59565b82800160010185558215610a59579182015b82811115610a58578251825591602001919060010190610a3d565b5b509050610a669190610a6a565b5090565b610a8c91905b80821115610a88576000816000905550600101610a70565b5090565b90565b6101f980610a9e6000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461005157806338bbfa50146100c8575b600080fd5b34801561005d57600080fd5b506100c66004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610185565b005b3480156100d457600080fd5b506101836004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101c8565b005b6101c4828260006040519080825280601f01601f1916602001820160405280156101be5781602001602082028038833980820191505090505b506101c8565b5050565b5050505600a165627a7a72305820abf1b4bbc5725ffd7ef8c48219915296c89375c3dd482ee13b9fbda06186c9c20029",
  "deployedBytecode": "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461005157806338bbfa50146100c8575b600080fd5b34801561005d57600080fd5b506100c66004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610185565b005b3480156100d457600080fd5b506101836004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101c8565b005b6101c4828260006040519080825280601f01601f1916602001820160405280156101be5781602001602082028038833980820191505090505b506101c8565b5050565b5050505600a165627a7a72305820abf1b4bbc5725ffd7ef8c48219915296c89375c3dd482ee13b9fbda06186c9c20029",
  "sourceMap": "102:231:0:-;;;149:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:11;209:3;;:40;;;;;;;;;;;;;;;;;;260:58;2929:4:1;300:17:0;;2755:4:1;278:19:0;;:39;260:17;;;:58;;;:::i;:::-;149:177;102:231;;25467:114:1;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25545:8;;;;;;;;;;;:21;;;25567:6;25545:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25545:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25545:29:1;;;;25467:114;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;;;:21;;;:::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;;;:55;;;:::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;;;:55;;;:::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;;;:55;;;:::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;;;:55;;;:::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;;;:55;;;:::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;;;:55;;;:::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;;;:55;;;:::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;102:231:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "102:231:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5508:111:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5508:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5624:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5508:111;5574:38;5585:4;5591:6;5609:1;5599:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5599:12:1;;;;5574:10;:38::i;:::-;5508:111;;:::o;5624:146::-;;;;:::o",
  "source": "pragma solidity ^0.4.22;\r\n\r\nimport \"installed_contracts/oraclize-api/contracts/usingOraclize.sol\";\r\n\r\ncontract Teste is usingOraclize {\r\n\r\n    \r\n    constructor (address _oarAddress) public payable {\r\n        OAR = OraclizeAddrResolverI(_oarAddress);\r\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\r\n    }\r\n\r\n\r\n}",
  "sourcePath": "C:\\Users\\Helfstein\\Desktop\\TCC\\dapp-scientific-article\\src\\contracts\\Teste.sol",
  "ast": {
    "absolutePath": "/C/Users/Helfstein/Desktop/TCC/dapp-scientific-article/src/contracts/Teste.sol",
    "exportedSymbols": {
      "Teste": [
        23
      ]
    },
    "id": 24,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 24,
        "sourceUnit": 5846,
        "src": "28:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5845,
              "src": "120:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5845",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "120:13:0"
          }
        ],
        "contractDependencies": [
          5845
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23,
          5845
        ],
        "name": "Teste",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "198:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "209:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11,
                          "name": "_oarAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "237:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "215:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$141_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "215:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "209:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "209:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "278:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "300:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "278:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 15,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3487,
                      "src": "260:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "260:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "260:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_oarAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "162:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "162:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "161:21:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 23,
            "src": "149:177:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 24,
        "src": "102:231:0"
      }
    ],
    "src": "0:333:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Helfstein/Desktop/TCC/dapp-scientific-article/src/contracts/Teste.sol",
    "exportedSymbols": {
      "Teste": [
        23
      ]
    },
    "id": 24,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 24,
        "sourceUnit": 5846,
        "src": "28:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5845,
              "src": "120:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5845",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "120:13:0"
          }
        ],
        "contractDependencies": [
          5845
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23,
          5845
        ],
        "name": "Teste",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "198:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "209:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11,
                          "name": "_oarAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "237:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "215:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$141_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "215:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "209:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$141",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "209:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "278:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "300:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "278:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 15,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3487,
                      "src": "260:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "260:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "260:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_oarAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "162:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "162:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "161:21:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 23,
            "src": "149:177:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 24,
        "src": "102:231:0"
      }
    ],
    "src": "0:333:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe84490627e5d1f6e5ba43dfa6e35329e7f525822",
      "transactionHash": "0x21c8e9f1982cc52c06b48642f7f4c6e03525ffc38c3cb7865df210c7ce47629a"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-01T01:03:49.477Z"
}